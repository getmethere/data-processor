{"name":"Data Processor","tagline":"Pebble library to extract strings, ints and booleans from a long string.","body":"# Data Processor 1.0.1  [![Build Status](https://travis-ci.org/smallstoneapps/data-processor.png?branch=master)](https://travis-ci.org/smallstoneapps/data-processor)\r\n\r\nPebble library to extract strings, ints and booleans from a long string of data.\r\n\r\n## Usage\r\n\r\n````c\r\n// This is not a complete example, but should demonstrate\r\n// the basic usage of Data Processor.\r\n\r\nstatic void parse_data(char* data) {\r\n  ProcessingState* state = data_processor_create(data, '|');\r\n  uint8_t num_strings = data_processor_count();\r\n  char** strings = malloc(sizeof(char*) * num_strings);\r\n  for (uint8_t n = 0; n < num_strings; n += 1) {\r\n    strings[n] = data_processor_get_string(state);\r\n  }\r\n}\r\n````\r\n\r\n## Tests\r\n\r\nUnit tests for Data Processor exist in the `tests` folder.\r\n\r\nTo run the tests:\r\n\r\n```sh\r\nmake test\r\n```\r\n\r\n## Function Documentation\r\n\r\nInitialise the global Data Processor state object with a string of data and a\r\ndelimiter character.\r\n\r\n````c\r\nvoid data_processor_init(char* data, char delim);\r\n````\r\n\r\nCreate and return a new Data Processor state object with a string of data and a\r\ndelimiter character.\r\n\r\n````c\r\nProcessingState* data_processor_create(char* data, char delim);\r\n````\r\n\r\nDestroy a Data Processor state object.\r\n\r\n````c\r\nvoid data_processor_destroy(ProcessingState* state);\r\n````\r\n\r\nDestroys the global Data Processor state object.\r\n\r\n````c\r\nvoid data_processor_deinit();\r\n````\r\n\r\nGet the global Data Processor state object, used for passing to the functions below.\r\n\r\n````c\r\nProcessingState* data_processor_get_global(void);\r\n````\r\n\r\nGet the count of the remaining subelements for a Data Processor state object.\r\n\r\n````c\r\nuint8_t data_processor_count(ProcessingState* state);\r\n````\r\n\r\nGet the next element as a string for a Data Processor state object.\r\n\r\n````c\r\nchar* data_processor_get_string(ProcessingState* state);\r\n````\r\n\r\nGet the next element as a bool for a Data Processor state object.\r\n\r\n````c\r\nbool data_processor_get_bool(ProcessingState* state);\r\n````\r\n\r\nGet the next element as an int for a Data Processor state object.\r\n\r\n````c\r\nint data_processor_get_int(ProcessingState* state);\r\n````\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}